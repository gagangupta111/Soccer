show databases;

create database openshiftapp3;
use openshiftapp3;

DROP TABLE IF EXISTS `PLAYER`;
CREATE TABLE `PLAYER` (
  `PLAYER_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PLAYER_NAME` varchar(10) NOT NULL,
  `PLAYER_DOB` date NOT NULL,
  `PLAYER_SEX` varchar(2)  NOT NULL,
  PRIMARY KEY (`PLAYER_ID`) USING BTREE
);

DROP TABLE IF EXISTS `JERSEY`;
CREATE TABLE `JERSEY` (
  `JERSEY_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `JERSEY_NAME` varchar(10) NOT NULL,
  `JERSEY_COLOR` varchar(10) NOT NULL,
  `JERSEY_SIZE` varchar(2) NOT NULL,
  PRIMARY KEY (`JERSEY_ID`) USING BTREE
);


DROP TABLE IF EXISTS `SPONSOR`;
CREATE TABLE `SPONSOR` (
  `SPONSOR_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `SPONSOR_NAME` varchar(10) NOT NULL,
  `SPONSOR_REPUTATION` varchar(10) NOT NULL,
  `SPONSOR_MAX_SPENT` long NOT NULL,
  PRIMARY KEY (`SPONSOR_ID`) USING BTREE
);


DROP TABLE IF EXISTS `ADDRESS`;
CREATE TABLE `ADDRESS` (
  `ADDRESS_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ADDRESS_CITY` varchar(10) NOT NULL,
  `ADDRESS_STATE` varchar(10) NOT NULL,
  `ADDRESS_PINCODE`  int(10)  NOT NULL,
  `ADDRESS_lATITUDE`  double  NOT NULL,
  `ADDRESS_LONGITUDE` double NOT NULL,
  PRIMARY KEY (`ADDRESS_ID`) USING BTREE
);


DROP TABLE IF EXISTS `STADIUM`;
CREATE TABLE `STADIUM` (
  `STADIUM_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `STADIUM_NAME` varchar(100) NOT NULL,
  `STADIUM_ADDRESS`  int(10) unsigned NOT NULL,
  PRIMARY KEY (`STADIUM_ID`) USING BTREE,
  CONSTRAINT `FK_STADIUM_ADDRESS` FOREIGN KEY (`STADIUM_ADDRESS`) REFERENCES `ADDRESS` (`ADDRESS_ID`)
  ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS `TEAM`;
CREATE TABLE `TEAM` (

  `TEAM_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TEAM_NAME` varchar(100) NOT NULL,

  `TEAM_MANAGER`  int(10) unsigned NOT NULL,
  `TEAM_COACH`  int(10) unsigned NOT NULL,
  `TEAM_JERSEY`  int(10) unsigned NOT NULL,

  PRIMARY KEY (`TEAM_ID`) USING BTREE,
  CONSTRAINT `FK_TEAM_MANAGER` FOREIGN KEY (`TEAM_MANAGER`) REFERENCES `PLAYER` (`PLAYER_ID`),
  CONSTRAINT `FK_TEAM_COACH` FOREIGN KEY (`TEAM_COACH`) REFERENCES `PLAYER` (`PLAYER_ID`),
  CONSTRAINT `FK_TEAM_JERSEY` FOREIGN KEY (`TEAM_JERSEY`) REFERENCES `JERSEY` (`JERSEY_ID`)

);

DROP TABLE IF EXISTS `MATCH`;
CREATE TABLE `MATCH` (

  `MATCH_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `MATCH_WHEN` date NOT NULL,
  `MATCH_TEAM1`  int(10) unsigned NOT NULL,
  `MATCH_TEAM2`  int(10) unsigned NOT NULL,
  `MATCH_STADIUM`  int(10) unsigned NOT NULL,

  PRIMARY KEY (`MATCH_ID`) USING BTREE,
  CONSTRAINT `FK_MATCH_TEAM1` FOREIGN KEY (`MATCH_TEAM1`) REFERENCES `TEAM` (`TEAM_ID`),
  CONSTRAINT `FK_MATCH_TEAM2` FOREIGN KEY (`MATCH_TEAM2`) REFERENCES `TEAM` (`TEAM_ID`),
  CONSTRAINT `FK_MATCH_STADIUM` FOREIGN KEY (`MATCH_STADIUM`) REFERENCES `STADIUM` (`STADIUM_ID`)

);

DROP TABLE IF EXISTS `STAT_EVENT_TYPE`;
CREATE TABLE `STAT_EVENT_TYPE` (

  `STAT_EVENT_TYPE_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `STAT_EVENT_TYPE_NAME` varchar(100) NOT NULL,

  PRIMARY KEY (`STAT_EVENT_TYPE_ID`) USING BTREE

);

DROP TABLE IF EXISTS `EVENT`;
CREATE TABLE `EVENT` (

  `EVENT_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `EVENT_STAT_EVENT_TYPE`  int(10)  unsigned NOT NULL,

   `EVENT_START_TIME` date NOT NULL,
   `EVENT_END_TIME` date NOT NULL,

   `EVENT_PLAYER`  int(10) unsigned NOT NULL,
   `EVENT_TEAM`  int(10) unsigned NOT NULL,
   `EVENT_MATCH`  int(10) unsigned NOT NULL,

  PRIMARY KEY (`EVENT_ID`) USING BTREE,
  CONSTRAINT `FK_EVENT_STAT_EVENT_TYPE` FOREIGN KEY (`EVENT_STAT_EVENT_TYPE`)
  REFERENCES `STAT_EVENT_TYPE` (`STAT_EVENT_TYPE_ID`),

  CONSTRAINT `FK_EVENT_PLAYER` FOREIGN KEY (`EVENT_PLAYER`) REFERENCES `PLAYER` (`PLAYER_ID`),
  CONSTRAINT `FK_EVENT_TEAM` FOREIGN KEY (`EVENT_TEAM`) REFERENCES `TEAM` (`TEAM_ID`),
  CONSTRAINT `FK_EVENT_MATCH` FOREIGN KEY (`EVENT_MATCH`) REFERENCES `MATCH` (`MATCH_ID`)

);


DROP TABLE IF EXISTS `STAT`;
CREATE TABLE `STAT` (

  `STAT_ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `STAT_STAT_EVENT_TYPE`  int(10) unsigned NOT NULL,

   `SCORE_TEAM1` int(10) unsigned NOT NULL,
   `SCORE_TEAM2` int(10) unsigned NOT NULL,

  PRIMARY KEY (`STAT_ID`) USING BTREE,
  CONSTRAINT `FK_STAT_STAT_EVENT_TYPE` FOREIGN KEY (`STAT_STAT_EVENT_TYPE`)
  REFERENCES `STAT_EVENT_TYPE` (`STAT_EVENT_TYPE_ID`)

);

